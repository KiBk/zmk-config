/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
//#include <dt-bindings/zmk/ext_power.h>

/ {
	behaviors {
        	ht: hold_tap {
            		compatible = "zmk,behavior-hold-tap";
            		#binding-cells = <2>;
            		flavor = "tap-preferred";
            		tapping-term-ms = <220>;
            		quick-tap-ms = <150>;
            		require-prior-idle-ms = <100>;
            		bindings = <&kp>, <&kp>;
        	};
    	};

	conditional_layers {
        	compatible = "zmk,conditional-layers";
        	tri_layer {
            		if-layers = <1 2>;
            		then-layer = <3>;
        	};
    	};

	keymap {
		compatible = "zmk,keymap";

		default_layer {
// ------------------------------------------------------------------------------------------------------------
// |  ESC  |  1  |  2  |  3   |  4   |  5      |                   |  6        |  7    |  8    |  9   |   0   |   `     |
// |  TAB  |  Q  |  W  |  E   |  R   |  T      |                   |  Y        |  U    |  I    |  O   |   P   |   -     |
// |  CTRL |  A  |  S  |  D   |  F   |  G      |                   |  H        |  J    |  K    |  L   |   ;   |  ' "    |
// | SHIFT |  Z  |  X  |  C   |  V   |  B      |   "["  |  |  "]"  |  N        |  M    | , <   | . >  |  / ?  | ESC/ALT |
//                     | ALT  | GUI  | LEFT/TAB|  SPACE |  | ENTER | RIGHT/BSPC| BSPC  | GUI   |
			bindings = <
&kp ESC   &kp N1 &kp N2 &kp N3   &kp N4   &kp N5                                     &kp N6      &kp N7   &kp N8    &kp N9  &kp N0   &kp GRAVE
&kp TAB   &kp Q  &kp W  &kp E    &kp R    &kp T                                      &kp Y       &kp U    &kp I     &kp O   &kp P    &kp MINUS
&kp LCTRL &ht LSHIFT A  &ht LCTRL S &ht LALT D &ht LGUI F &kp G                      &kp H       &ht RGUI J &ht RALT K &ht RCTRL L &ht RSHFT SQT &kp SQT
&kp LSHFT &kp Z  &kp X  &kp C    &kp V    &kp B      &kp LBKT         &kp RBKT       &kp N       &kp M    &kp COMMA &kp DOT &kp FSLH &ht RALT ESC
                        &kp LALT &kp LGUI &lt 2 TAB  &mt LSHFT SPACE  &mt LCTRL RET  &lt 1 BSPC  &kp BSPC &kp RGUI
			>;
		};

		right_layer {
// ------------------------------------------------------------------------------------------------------------
// |      |       |     |     |      |      |                   |      |       |       |      |       |       |
// |      |INSERT |  7  |  8  |  9   |  =   |                   | HOME | PG_UP | PG_DN | END  | :     |       |
// |      |DELETE |  4  |  5  |  6   |  -   |                   | <-   |   v   |  ^    |  ->  | ;     |       |
// |      |   0   |  1  |  2  |  3   |  +   |        |  |       |      |       |  `    |  ~   | CAPS  |       |
//                            |      |      |  ESC   |  |       |      |       |       |
                        bindings = <
&trans  &trans          &trans  &trans  &trans  &trans                          &trans      &trans    &trans    &trans     &trans     &trans
&trans  &kp INS         &kp N7  &kp N8  &kp N9  &kp EQUAL                       &kp HOME    &kp PG_DN &kp PG_UP &kp END    &kp COLON  &trans
&trans  &kp DEL         &kp N4  &kp N5  &kp N6  &kp MINUS                       &kp LEFT    &kp DOWN  &kp UP    &kp RIGHT  &kp SEMI   &trans
&trans  &kp N0          &kp N1  &kp N2  &kp N3  &kp KP_PLUS  &trans   &trans    &trans      &trans    &kp GRAVE &kp TILDE  &caps_word &trans
                                &trans  &trans  &trans       &kp ESC  &trans    &trans      &trans    &trans
                        >;
                };

		left_layer   {
// ------------------------------------------------------------------------------------------------------------
// |       |     |     |      |      |      |                   |      |       |       |      |       |       |
// |  F1   |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
// |   `   |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
// |       |  F1 |  [  |  ]   |  {   |  }   |        |  |       |  =   |  _    |  F12  |  "|" |   \   |  "|"  |
//                     |      |      |      |        |  | DEL   |      |  DEL  |       |
                        bindings = <
&trans     &trans           &trans            &trans            &trans       &trans                       &trans    &trans    &trans          &trans    &trans    &trans
&kp F1     &kp F2           &kp F3            &kp F4            &kp F5       &kp F6                       &kp F7    &kp F8    &kp F9          &kp F10   &kp F11   &kp F12
&kp GRAVE  &kp EXCL         &kp AT            &kp HASH          &kp DOLLAR   &kp PRCNT                    &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR  &kp RPAR  &kp TILDE
&trans     &kp F1           &kp LBKT          &kp RBKT          &kp LBRC     &kp RBRC  &trans   &trans    &kp EQUAL &kp UNDER &kp F12         &kp PIPE  &kp BSLH  &kp PIPE
                                              &trans            &trans       &trans    &trans   &kp DEL   &trans    &kp DEL    &trans
                        >;
                };

		tri_layer {
// ------------------------------------------------------------------------------------------------------------
// |      |            |     |     |          |           |                   |      |       |       |      |            |       |
// |      | RESET      |     |     |          | PROFILE 0 |                   |      |       |       |      | RESET      |       |
// |      | BOOTLOADER |     |     |          | PROFILE 1 |                   |      |       |       |      | BOOTLOADER |       |
// |      |            |     |     | CLEAR BT | PROFILE 2 |        |  |       |      |       |       |      | (4)        |       |
//                                 |          |           |        |  |       |      |       |       |
                        bindings = <
&trans  &trans          &trans &trans   &trans      &trans                           &trans      &trans    &trans    &trans     &trans        &trans
&trans  &sys_reset      &trans &trans   &trans      &bt BT_SEL 0                     &trans      &trans    &trans    &trans     &sys_reset    &trans
&trans  &bootloader     &trans &trans   &trans      &bt BT_SEL 1                     &trans      &trans    &trans    &trans     &bootloader   &trans
&trans  &trans          &trans &trans   &bt BT_CLR  &bt BT_SEL 2  &trans   &trans    &trans      &trans    &trans    &trans     &to 4         &trans
                        &trans &trans   &trans      &trans        &trans   &trans    &trans      &trans
                        >;
        	};

		gaming_layer {
// ------------------------------------------------------------------------------------------------------------
// |  ESC  |  1  |  2  |  3   |  4   |  5      |                   |  6        |  7    |  8    |  9   |   0   |   `     |
// |  TAB  |  Q  |  W  |  E   |  R   |  T      |                   |  Y        |  U    |  I    |  O   |   P   |   -     |
// |  CTRL |  A  |  S  |  D   |  F   |  G      |                   |  H        |  J    |  K    |  L   |   ;   |  ' "    |
// | SHIFT |  Z  |  X  |  C   |  V   |  B      |   "["  |  |  "]"  |  N        |  M    | , <   | . >  |  (0)  | ESC/ALT |
//                     | ALT  | GUI  | LEFT/TAB|  SPACE |  | ENTER | RIGHT/BSPC| BSPC  | GUI   |
			bindings = <
&kp ESC   &kp N1 &kp N2 &kp N3   &kp N4   &kp N5                                     &kp N6      &kp N7   &kp N8    &kp N9  &kp N0   &kp GRAVE
&kp TAB   &kp Q  &kp W  &kp E    &kp R    &kp T                                      &kp Y       &kp U    &kp I     &kp O   &kp P    &kp MINUS
&kp LCTRL &kp A  &kp S  &kp D    &kp F    &kp G                                      &kp H       &kp J    &kp K     &kp L   &kp SEMI &kp SQT
&kp LSHFT &kp Z  &kp X  &kp C    &kp V    &kp B      &kp LBKT         &kp RBKT       &kp N       &kp M    &kp COMMA &kp DOT &to 0    &ht RALT ESC
                        &kp LALT &kp LGUI &lt 2 TAB  &kp SPACE        &kp RET        &lt 1 BSPC  &kp BSPC &kp RGUI
			>;
		};
	};
};
